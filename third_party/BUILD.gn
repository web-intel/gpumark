static_library("glad") {
  sources = [
    "glad/include/KHR/khrplatform.h",
    "glad/include/glad/glad.h",
    "glad/src/glad.c",
  ]

  include_dirs = [ "glad/include" ]
}

source_set("stb") {
  configs += ["//:common"]
  include_dirs = [ "stb" ]
  sources = [
    "stb/stb_image.h",
  ]
}

source_set("imgui") {
  configs += ["//:common"]
  include_dirs = [
    "imgui",
    "glfw/include",
    "glad/include",
  ]
  sources = [
    "imgui/examples/imgui_impl_glfw.cpp",
    "imgui/examples/imgui_impl_glfw.h",
    "imgui/imconfig.h",
    "imgui/imgui.cpp",
    "imgui/imgui.h",
    "imgui/imgui_demo.cpp",
    "imgui/imgui_draw.cpp",
    "imgui/imgui_internal.h",
    "imgui/imgui_widgets.cpp",
    "imgui/imstb_rectpack.h",
    "imgui/imstb_textedit.h",
    "imgui/imstb_truetype.h",
  ]
}

static_library("glfw") {
  configs += ["//:common"]
  include_dirs = [ "glfw/include" ]

  if (is_win) {
    defines = [ "_GLFW_WIN32" ]
  }
  sources = [
    "glfw/include/GLFW/glfw3.h",
    "glfw/include/GLFW/glfw3native.h",
    "glfw/src/context.c",
    "glfw/src/egl_context.c",
    "glfw/src/egl_context.h",
    "glfw/src/init.c",
    "glfw/src/input.c",
    "glfw/src/internal.h",
    "glfw/src/monitor.c",
    "glfw/src/osmesa_context.c",
    "glfw/src/osmesa_context.h",
    "glfw/src/vulkan.c",
    "glfw/src/window.c",
  ]
  libs = []

  if (is_win) {
    sources += [
      "glfw/src/wgl_context.c",
      "glfw/src/wgl_context.h",
      "glfw/src/win32_init.c",
      "glfw/src/win32_joystick.c",
      "glfw/src/win32_joystick.h",
      "glfw/src/win32_monitor.c",
      "glfw/src/win32_platform.h",
      "glfw/src/win32_thread.c",
      "glfw/src/win32_time.c",
      "glfw/src/win32_window.c",
    ]
  }
}